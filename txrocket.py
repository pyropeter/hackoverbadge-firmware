import serial
import time

def bytestohex(b):
	res = b''
	for c in b:
		res += (b'0' + hex(c)[2:].encode('ascii'))[-2:]
	return res

def execCmd(cmd):
	s.write(cmd + b'\n')
	s.flush()
	time.sleep(0.005)

def sendFrame(msg):
	if len(msg) > 32:
		raise

	msg = (msg + b'\x00' * 32)[:32]

	execCmd(b's ' + bytestohex(msg))

def announce(img):
	if len(img) != 864:
		raise

	for i in range(28):
		index = i * 31
		sendFrame(bytes((i,)) + img[index:index+31])

	sendFrame(bytes((0xff,)))


while True:
	s = serial.Serial('/dev/ttyACM3', baudrate=115200)
	execCmd(b'i')
	execCmd(b'cc59')
	execCmd(b'ctfafdb825be')
	announce(b'\x00\xe0\xf8\x18\x0c\x04\x04DD\xcc\xc0\x00\x00\x00\x00\x00\x00\x00\xc0\xe0\xb0\x90\x90\xb0\xe0\xc0\x00\x00\x00\x00\x00\x00\x00\xfe\xfe \x10\x10\x10\xf0\xe0\x00\x00\x00\x00\x00\x00\x00\xc0\xe0\xb0\x90\x90\xb0\xe0\xc0\x00\x00\x00\x00\x00\x00\x00\xf6\xf6\x00\x00\x00\x00\x00\x00\x00\xf0\xf0 \x10\x10\xf0\xe00\x10\x10\xf0\xe0\x00\x00\x00\x00\x00\x00\x00\x80\x80\x80\x80\x00\x00\x01\x07\x06\x0c\x08\x08\x08\x08\x0f\x0f\x00\x00\x00\x00\x00\x00\x00\x03\x07\x0c\x08\x08\x08\x08\x04\x00\x00\x00\x00\x00\x00\x00\x8f\xcf\xe0\xe0\xe0\xe0\xef\xef\xe0\xc0\xc0\xc0\xc0\xc0\xc0\xc3\xc7\xcc\x88\x88\x88\x08\x04\x00\x00\x00\x00\x00\x00\x00\x0f\x0f\x00\x00\x00\x00\x00\x00\x00\x0f\x0f\x00\x00\x00\x0f\x0f\x00\x00\x00\x0f\x0f\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xc0\xf0\xf8\xfe\xff\xff\xff\xff\xdf\xdf\xdf\xdb\x9b\x9b\x9a\x9a\x92\x92\x124$$%\t\t\x0b\x03\x07\x06\x0e\x0c\x1c\x1880p`\xe0\xc0\xc0\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xe0\xfc\xff\xff\xff\xff\xff\xff\xff\xff\xef\xef\xefommmMM\x89\x89\x89\x11\x11\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0\x0f\x81\xc2\x82\xc3\x83\x07\x86|\x18\xb0\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xc0\xc0\xc0\xe0\xe0``p0088\x18\x1c\x1c\x1c\x1c\x1f\x9f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f_____\x7f\xff\xfe\xfe\xfe\xfe\xfe\xfc\xfc\xfc\xfc\xfc\xf8\xf8\xf8\xf8\xf8\xf0\xf0\xf0\xf0\xfe\xe1\xe0\xe0\xe1\xe3\xe1\xe0\xf0\xef\xe0\xe0\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xe08\x0c\x0e\x07\x07\x03\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x06\x04\x0c\x0c\x0c\x0c\x0c\x18\x18\x18\x1a\x1a\x1a2226&&&66777733333377??\x1f\x1f\x1f\x1f\x1f??7ggG\xc3\x83\x83\x82\x83\x81\x81\x81\x83\x83\x83\x83\x03\x83\x86\x86\x86\x8e\x8c\x9c\xbc\xf8\xf8p\x03\x07\x06\x04\x0c\x0c\x0c\x0c\x08\x08\x18\x18\x18\x18\x18\x18\x10\x10\x10\x10\x10\x10\x10\x18\x18\x18\x18\x18\x18\x18\x18\x18\x18\x18\x1c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x04\x06\x06\xc6\xc6\x06\x06\x02\x02\x02\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x02\x02\x02\x82\x84\x04\x04\x04\x04\xc8\xc8\t\t\x0b\x0b\x0b\x0f\x0f\r\r\r\r\x05\x04\x04\x06\x03\x03\x01\x01\x00\x00\x00\x00\x00|\xfe\x82\x82\x82\xfe|\x00\x00\xfe\xfe\x04\x02\x02\x008|\xc6\x82\x82D\xfe\xfe\x00\x00`\xf4\x92\x92\x92\xfe\xfc\x00\x00\xfe\xfe\x04\x02\x02\xfe\xfc\x00\x00\xfe\xfe\x00\x00L\x9e\x92\x92\xf2d\x00\x00`\xf4\x92\x92\x92\xfe\xfc\x00\x02\xff\xff\x82\x82\x00\x00\xfe\xfe\x00\x00|\xfe\x82\x82\x82\xfe|\x00\x00\xfe\xfe\x04\x02\x02\xfe\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x04\x04\x04\x06\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')

